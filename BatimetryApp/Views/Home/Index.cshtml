@using System.Collections.Generic
@using System.Linq
@using BatimetryApp.GeoserverApi

@{
    ViewBag.Title = "Index";
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDk7yClQXO14Hh3GQ772X_s3FwbYdT_eKE" async></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"/>
<link rel="stylesheet" href="~/Styles/mapStyles.css"/>
<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.gridlayer.googlemutant@latest/Leaflet.GoogleMutant.js"></script>
<div style="height: 50px; margin-top: 20px; width: 10vw">
		@Html.DropDownList("Select layer",
			((IEnumerable<Layer>)ViewData["layers"]).Select(layer => new SelectListItem {Text = layer.Title, Value = $"{layer.Name}??{layer.BoundingBox.MinX}??{layer.BoundingBox.MinY}"})
			, new {@onchange = "ChangeLayer(this.value)"})
</div>
<div style="height: 75vh;" id="map-id"></div>
<script>
	function ChangeLayer(layerData) {
		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});
		var dataSplit = layerData.split("??");
		map.setView(new L.LatLng(dataSplit[2], dataSplit[1]), 8);
		var wmsLayer = L.tileLayer.wms('http://127.0.0.1:8080/geoserver/ows?', {
			layers: dataSplit[0]
		});
		map.addLayer(wmsLayer);
		map.fitBounds(wmsLayer);
	}

	function ColorForIndex(index) {
		return index >= 10 ? "#FF0000" :
			index >= 5 ? "#FFFF00" :
			index >= 2 ? "#0000FF" :
			"#000000";
	}

	function ShowPopup() {
		
	}

	@{
		var firstLayer = ((IEnumerable<Layer>) ViewData["layers"]).First();
	}
	var map = L.map('map-id');
	map.on('click', ShowPopup);
	var mutant = L.gridLayer.googleMutant({
		type: 'satellite'
	}).addTo(map);
	var basemaps = {
		"Google Maps": mutant
	};
	L.control.layers(basemaps).addTo(map);
	var legend = L.control({position: 'bottomright'});
	legend.onAdd = function (map) {

		var div = L.DomUtil.create('div', 'legend'),
			levels = [0, 2, 5, 10],
			labels = [];

		for (var i = 0; i < levels.length; i++) {
			div.innerHTML +=
				'<i style="background:' + ColorForIndex(i) + '"></i> ' +
				levels[i] + (levels[i + 1] ? '&ndash;' + levels[i + 1] + '<br>' : '+');
		}

		return div;
	};
	legend.addTo(map);
	var wmsLayer = L.tileLayer.wms('http://127.0.0.1:8080/geoserver/ows?', {
		layers: "@firstLayer.Name"
	});
	map.addLayer(wmsLayer);
	map.setView(new L.LatLng(@firstLayer.BoundingBox.MinY, @firstLayer.BoundingBox.MinX), 8);
	map.fitBounds(wmsLayer);
</script>
