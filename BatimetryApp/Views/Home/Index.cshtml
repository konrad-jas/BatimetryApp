@using System.Collections.Generic
@using System.Linq
@using BatimetryApp.GeoserverApi

@{
    ViewBag.Title = "Index";
}
@*<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDk7yClQXO14Hh3GQ772X_s3FwbYdT_eKE" async></script>*@
<link rel="stylesheet" href="~/Styles/mapStyles.css"/>
<script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
<div style="height: 50px; margin-top: 20px; width: 10vw">
		@Html.DropDownList("Select layer",
			((IEnumerable<Layer>)ViewData["layers"]).Select(layer => new SelectListItem {Text = layer.Title, Value = $"{layer.Name}"})
			, new {@onchange = "ChangeLayer(this.value)"})
</div>
<div style="height: 75vh; width: 100%" id="map-id"></div>
<div class="arrow_box" id="popup-container">
	<a href="#" id="popup-closer" class="ol-popup-closer"></a>
	<div id="popup-content"></div>
</div>
<script>

	var currentLayer;
	var map;
	var overlay;

	function ChangeLayer(layerData) {
		var newLayer = CreateLayer(layerData);
		UpdateMap(newLayer);
	}

	function Round(value, decimals) {
		return Number(Math.round(value+'e'+decimals)+'e-'+decimals);
	}

	//function ColorForIndex(index) {
	//	return index >= 10 ? "#FF0000" :
	//		index >= 5 ? "#FFFF00" :
	//		index >= 2 ? "#0000FF" :
	//		"#000000";
	//}

	function ShowPopup(depth, coordinate) {
		var popupContent = document.getElementById('popup-content');
		popupContent.innerHTML = "Depth: " + Round(depth, 2) + "m";
		overlay.setPosition(coordinate);
	}

	function ClosePopup() {
		overlay.setPosition(undefined);
		return false;
	}

	function CreateLayer(layerName) {
		return [
			new window.ol.layer.Tile({
				source: new window.ol.source.OSM()
			}),
			new window.ol.layer.Tile({
				source: new window.ol.source.TileWMS({
					url: 'http://127.0.0.1:8080/geoserver/ows?',
					params: { 'LAYERS': layerName, 'TILED': true },
					serverType: 'geoserver'
				})
			})
		];
	}

	function UpdateMap(newLayer) {
		map.removeLayer(currentLayer);
		currentLayer = newLayer;
		map.addLayer(currentLayer);
	}

	function OnClick(eventData) {
		overlay.setPosition();

		var viewProjection = view.getProjection();
		var viewResolution = view.getResolution();

		var url = currentLayer.getSource().getGetFeatureInfoUrl(
			eventData.coordinate, viewResolution, viewProjection,
			{ 'INFO_FORMAT': 'application/json'});
		if (url) {
			var parser = new ol.format.GeoJSON();
			$.ajax({
				url: url,
				crossDomain: true
			}).then(function (response) {
				var result = parser.readFeatures(response);
				if (result) {
					ShowPopup(result[0].N.GRAY_INDEX, eventData.coordinate);
				}
			});
		}
	}

	@{
		var firstLayer = ((IEnumerable<Layer>)ViewData["layers"]).First();
	}

	var layers = CreateLayer("@firstLayer.Name");
	currentLayer = layers[1];
	view = new ol.View({
		center: [2118528.6759519447, 7277722.337088201],
		zoom: 10
	});
	map = new ol.Map({
		layers: layers,
		target: 'map-id',
		view: view
	});

	map.on('click', OnClick);

	overlay = new ol.Overlay({
		element: document.getElementById('popup-container'),
		positioning: 'bottom-center',
		offset: [0, -10]
	});
	map.addOverlay(overlay);

	var closer = document.getElementById('popup-closer');
	closer.onclick = ClosePopup;

</script>
